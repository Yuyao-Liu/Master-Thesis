import argparse

def get_OCP_args(parser : argparse.ArgumentParser):
    parser.add_argument("--ocp-dt", type=float, default=1e-2, \
                        help="time length between state-control-pair decision variables")
    parser.add_argument("--n-knots", type=int, default=100, \
                        help="number of state-control-pair decision variables")
    parser.add_argument("--stop-at-final", type=int, default=1, \
                        help="the trajectory generated by the OCP will be followed. it might not have finally velocity 0. \
                             if this argument is set to true, the final velocity will be set to 0 (there will be overshoot).")
    parser.add_argument("--solver", type=str, default="boxfddp", \
                        help="optimal control problem solver you want", choices=["boxfddp", "csqp"])
    parser.add_argument("--max-solver-iter", type=int, default=200, \
                        help="number of iterations the ocp solver takes. ~100-500 for just ocp (it can converge before ofc), ~10 for mpc")
    parser.add_argument("--ee-pose-cost", type=float, default=1e2, \
                        help="ee pose cost in pulling mpc")
    parser.add_argument("--base-translation-cost", type=float, default=1e2, \
                        help="base translation cost in pulling mpc")
    return parser
